<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utils="clr-namespace:ParadoxTranslator.Utils">

    <!-- VS Code Color Palette -->
    <Color x:Key="VSCodeBackground">#1E1E1E</Color>
    <Color x:Key="VSCodeSideBar">#252526</Color>
    <Color x:Key="VSCodeEditorBackground">#1E1E1E</Color>
    <Color x:Key="VSCodeActivityBar">#333333</Color>
    <Color x:Key="VSCodeStatusBar">#007ACC</Color>
    <Color x:Key="VSCodeBorder">#3E3E42</Color>
    <Color x:Key="VSCodeHover">#2A2D2E</Color>
    <Color x:Key="VSCodeSelection">#094771</Color>
    <Color x:Key="VSCodeAccent">#007ACC</Color>
    
    <SolidColorBrush x:Key="VSCodeBackgroundBrush" Color="{StaticResource VSCodeBackground}"/>
    <SolidColorBrush x:Key="VSCodeSideBarBrush" Color="{StaticResource VSCodeSideBar}"/>
    <SolidColorBrush x:Key="VSCodeActivityBarBrush" Color="{StaticResource VSCodeActivityBar}"/>
    <SolidColorBrush x:Key="VSCodeStatusBarBrush" Color="{StaticResource VSCodeStatusBar}"/>
    <SolidColorBrush x:Key="VSCodeBorderBrush" Color="{StaticResource VSCodeBorder}"/>
    <SolidColorBrush x:Key="VSCodeHoverBrush" Color="{StaticResource VSCodeHover}"/>
    <SolidColorBrush x:Key="VSCodeSelectionBrush" Color="{StaticResource VSCodeSelection}"/>
    <SolidColorBrush x:Key="VSCodeAccentBrush" Color="{StaticResource VSCodeAccent}"/>

    <!-- VS Code Style ToolTip -->
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="#252526"/>
        <Setter Property="Foreground" Value="#CCCCCC"/>
        <Setter Property="BorderBrush" Value="#3E3E42"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- VS Code Style Scrollbar (Minimalist) -->
    <Style x:Key="VSCodeScrollBarButton" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#858585"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="0"/>
        <Setter Property="Width" Value="0"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent" Width="0" Height="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- VS Code Style Scrollbar -->
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="14"/>
                <Setter Property="MinWidth" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="0"/>
                                </Grid.RowDefinitions>
                                
                                <RepeatButton Grid.Row="0" Style="{StaticResource VSCodeScrollBarButton}"
                                              Command="ScrollBar.LineUpCommand"/>
                                
                                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageUpCommand" Opacity="0" Background="Transparent"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageDownCommand" Opacity="0" Background="Transparent"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Style>
                                                <Style TargetType="Thumb">
                                                    <Setter Property="Background" Value="#424242"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Width" Value="10"/>
                                                    <Setter Property="Margin" Value="2,0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Thumb">
                                                                <Border Background="{TemplateBinding Background}" 
                                                                        BorderThickness="0"
                                                                        CornerRadius="5"
                                                                        Margin="{TemplateBinding Margin}">
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#555555"/>
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Setter Property="Background" Value="#6E6E6E"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                
                                <RepeatButton Grid.Row="2" Style="{StaticResource VSCodeScrollBarButton}"
                                              Command="ScrollBar.LineDownCommand"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="14"/>
                <Setter Property="MinHeight" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="0"/>
                                </Grid.ColumnDefinitions>
                                
                                <RepeatButton Grid.Column="0" Style="{StaticResource VSCodeScrollBarButton}"
                                              Command="ScrollBar.LineLeftCommand"/>
                                
                                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand" Opacity="0" Background="Transparent"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageRightCommand" Opacity="0" Background="Transparent"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Style>
                                                <Style TargetType="Thumb">
                                                    <Setter Property="Background" Value="#424242"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Height" Value="10"/>
                                                    <Setter Property="Margin" Value="0,2"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Thumb">
                                                                <Border Background="{TemplateBinding Background}" 
                                                                        BorderThickness="0"
                                                                        CornerRadius="5"
                                                                        Margin="{TemplateBinding Margin}">
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#555555"/>
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Setter Property="Background" Value="#6E6E6E"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                
                                <RepeatButton Grid.Column="2" Style="{StaticResource VSCodeScrollBarButton}"
                                              Command="ScrollBar.LineRightCommand"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern ComboBox Style with Template -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="BorderBrush" Value="#555555"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="20"/>
                                            </Grid.ColumnDefinitions>
                                            <Path Grid.Column="1"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                                  Fill="#000000"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Margin="10,6"
                                          IsHitTestVisible="False"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Border Background="#FFFFFF"
                                    BorderBrush="#555555"
                                    BorderThickness="1"
                                    MaxHeight="200"
                                    MinWidth="{TemplateBinding ActualWidth}">
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#007ACC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ComboBoxItem Style -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="#007ACC"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#094771"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Animated ProgressBar Style -->
    <Style x:Key="AnimatedProgressBar" TargetType="ProgressBar">
        <Setter Property="Background" Value="#1E1E1E"/>
        <Setter Property="Foreground" Value="#007ACC"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3">
                        <Grid x:Name="PART_Track">
                            <Border x:Name="PART_Indicator" CornerRadius="3"
                                    HorizontalAlignment="Stretch" RenderTransformOrigin="0,0.5">
                                <!-- Removed DropShadowEffect for performance - using gradient glow instead -->
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#007ACC" Offset="0"/>
                                        <GradientStop Color="#0098FF" Offset="0.5"/>
                                        <GradientStop Color="#007ACC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="IndicatorScale" ScaleX="0" ScaleY="1" />
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <!-- simple pulse animation when indeterminate -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="PART_Indicator"
                                                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                                                 From="0.05" To="0.95" Duration="0:0:1" AutoReverse="True"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Converter resource to calculate fraction -->
    <utils:ProgressFractionConverter x:Key="ProgressFractionConverter" />

    <!-- Loading Spinner Style -->
    <Style x:Key="LoadingSpinner" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Viewbox Width="40" Height="40">
                        <Canvas Width="120" Height="120">
                            <Canvas.Resources>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Width" Value="20"/>
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="Fill" Value="#007ACC"/>
                                </Style>
                            </Canvas.Resources>
                            <Ellipse Canvas.Left="50" Canvas.Top="0" Opacity="1"/>
                            <Ellipse Canvas.Left="85" Canvas.Top="15" Opacity="0.875"/>
                            <Ellipse Canvas.Left="100" Canvas.Top="50" Opacity="0.75"/>
                            <Ellipse Canvas.Left="85" Canvas.Top="85" Opacity="0.625"/>
                            <Ellipse Canvas.Left="50" Canvas.Top="100" Opacity="0.5"/>
                            <Ellipse Canvas.Left="15" Canvas.Top="85" Opacity="0.375"/>
                            <Ellipse Canvas.Left="0" Canvas.Top="50" Opacity="0.25"/>
                            <Ellipse Canvas.Left="15" Canvas.Top="15" Opacity="0.125"/>
                            <Canvas.RenderTransform>
                                <RotateTransform x:Name="SpinnerRotate" CenterX="60" CenterY="60"/>
                            </Canvas.RenderTransform>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard Name="SpinnerStoryboard">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SpinnerRotate"
                                                     Storyboard.TargetProperty="Angle"
                                                     From="0" To="360" Duration="0:0:1"
                                                     RepeatBehavior="Forever"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Pause animation when control is hidden -->
                        <Trigger Property="Visibility" Value="Collapsed">
                            <Trigger.EnterActions>
                                <PauseStoryboard BeginStoryboardName="SpinnerStoryboard"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <ResumeStoryboard BeginStoryboardName="SpinnerStoryboard"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Visibility" Value="Hidden">
                            <Trigger.EnterActions>
                                <PauseStoryboard BeginStoryboardName="SpinnerStoryboard"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <ResumeStoryboard BeginStoryboardName="SpinnerStoryboard"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

