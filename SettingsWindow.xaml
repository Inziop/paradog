<Window x:Class="ParadoxTranslator.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:services="clr-namespace:ParadoxTranslator.Services"
        Title="Settings - Paradox Translator" Height="720" Width="900"
        WindowStartupLocation="CenterOwner" 
        Background="Transparent"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResize"
        MinHeight="600" MinWidth="800">
    
    <Window.Resources>
        <services:LocalizationService x:Key="Loc"/>
    </Window.Resources>
    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="40" 
                      ResizeBorderThickness="5"
                      GlassFrameThickness="0"
                      CornerRadius="8"/>
    </WindowChrome.WindowChrome>
    
    <Border Background="#1E1E1E" CornerRadius="8" BorderBrush="#3E3E42" BorderThickness="1">
    <Grid>
        <Grid.Resources>
            <!-- Window Button Style -->
            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="46"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3E3E42"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#E81123"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Local header-style button for settings footer -->
            <Style x:Key="HeaderButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#007ACC"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="12,6"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#2F2F2F"/>
                        <Setter Property="Foreground" Value="#BEBEBE"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Ensure ComboBoxItems are dark and readable inside settings -->
            <Style x:Key="SettingsComboBoxItemStyle" TargetType="ComboBoxItem">
                <Setter Property="Background" Value="#2D2D30" />
                <Setter Property="Foreground" Value="White" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#007ACC" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3E3E40" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ComboBox style for settings to ensure collapsed selection is readable -->
            <Style x:Key="SettingsComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Background" Value="#2D2D30" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#3C3C3C" />
                <Setter Property="Padding" Value="6,2" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource SettingsComboBoxItemStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border x:Name="Bd" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <!-- Important: Foreground bound to template Foreground -->
                                        <ContentPresenter Grid.Column="0"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Left"/>
                                        <ToggleButton Grid.Column="1"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Width="20" Height="20"
                                            Background="Transparent"
                                            BorderThickness="0">
                                            <Path Data="M0,0 L4,4 L8,0" 
                                                Stroke="White" StrokeThickness="2"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                                        </ToggleButton>
                                    </Grid>
                                </Border>
                                <Popup Name="PART_Popup"
                                       Placement="Bottom"
                                       IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Custom Title Bar -->
        <Grid Grid.Row="0" Background="#2D2D30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="15,0">
                <TextBlock Text="⚙️" FontSize="18" Margin="0,0,8,0"/>
                <TextBlock x:Name="SettingsTitleText" Text="Settings" FontSize="14" FontWeight="SemiBold" 
                           Foreground="White" VerticalAlignment="Center"/>
            </StackPanel>
            
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Button Content="─" Style="{StaticResource TitleBarButtonStyle}" Click="OnMinimize"/>
                <Button Content="□" x:Name="MaximizeButton" Style="{StaticResource TitleBarButtonStyle}" Click="OnMaximize"/>
                <Button Content="✕" Style="{StaticResource TitleBarCloseButtonStyle}" Click="OnWindowClose"/>
            </StackPanel>
        </Grid>
        
        <!-- Header -->
        <Border Grid.Row="1" Background="#2D2D30" Padding="20,15">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="SettingsDescriptionText" Text="Configure your translation preferences" FontSize="14" 
                           Foreground="#CCCCCC" VerticalAlignment="Center"/>
            </StackPanel>
        </Border>
        
        <!-- Main Content -->
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" Padding="25">
            <StackPanel MaxWidth="1200">
                <!-- Translation Engine -->
                <GroupBox Header="Translation Engine" Margin="0,0,0,25" 
                          Foreground="White" BorderBrush="#3C3C3C" Padding="5">
                    <StackPanel Margin="20">
                            <TextBlock Text="Select your preferred translation service:" 
                                       Margin="0,0,0,12" Foreground="#CCCCCC" FontSize="13"/>
                            <TextBlock Text="Enable/disable AI translation using the toggle in the main toolbar." 
                                       Margin="0,0,0,12" Foreground="#888888" FontSize="12" FontStyle="Italic"/>

                    <ComboBox x:Name="EngineComboBox" Width="250" Margin="0,0,0,15"
                            Style="{StaticResource SettingsComboBoxStyle}">
                        <ComboBoxItem Content="Google Translate" Tag="google" IsSelected="True"
                                     Background="#2D2D30" Foreground="White"/>
                        <ComboBoxItem Content="Google AI Studio (Gemini)" Tag="gemini"
                                     Background="#2D2D30" Foreground="White"/>
                        <ComboBoxItem Content="DeepL" Tag="deepl"
                                     Background="#2D2D30" Foreground="White"/>
                        <ComboBoxItem Content="OpenAI GPT" Tag="openai"
                                     Background="#2D2D30" Foreground="White"/>
                    </ComboBox>
                        
                            <TextBlock Text="Note: Each service requires its own API key. Google AI Studio (Gemini) provides more contextual translations." 
                                       FontSize="12" Foreground="#888888" Margin="0,5,0,0"/>
                        </StackPanel>
                </GroupBox>

                <!-- Glossary removed to restore original settings UI -->
                
                <!-- API Configuration -->
                <GroupBox Header="API Configuration" Margin="0,0,0,25" 
                          Foreground="White" BorderBrush="#3C3C3C" Padding="5">
                    <StackPanel Margin="20">
                        <TextBlock Text="API Keys (Optional - for premium features):" 
                                   Margin="0,0,0,12" Foreground="#CCCCCC" FontSize="13"/>
                        
                        <Grid Margin="0,0,0,12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Grid.Column="0" Text="Google API Key:" 
                                       VerticalAlignment="Center" Margin="0,0,10,0" FontSize="13"/>
                            <TextBox Grid.Column="1" x:Name="GoogleApiKeyTextBox" 
                                     Background="#2D2D30" Foreground="White" 
                                     BorderBrush="#3C3C3C" Padding="10,6" Margin="0,0,10,0" FontSize="13"/>
                            <Button Grid.Column="2" Content="Test" Width="70" 
                                Style="{StaticResource HeaderButtonStyle}" Click="OnTestGoogleClick"/>
                            <Button Grid.Column="3" Content="Get Key" Width="80" Margin="8,0,0,0"
                                Style="{StaticResource HeaderButtonStyle}" Click="OnGetGoogleKeyClick"/>
                        </Grid>
                        
                        <Grid Margin="0,0,0,12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Grid.Column="0" Text="DeepL API Key:" 
                                       VerticalAlignment="Center" Margin="0,0,10,0" FontSize="13"/>
                            <TextBox Grid.Column="1" x:Name="DeepLApiKeyTextBox" 
                                     Background="#2D2D30" Foreground="White" 
                                     BorderBrush="#3C3C3C" Padding="10,6" Margin="0,0,10,0" FontSize="13"/>
                <Button Grid.Column="2" Content="Test" Width="70" 
                    Style="{StaticResource HeaderButtonStyle}" Click="OnTestDeepLClick"/>
                        </Grid>

                        <Grid Margin="0,0,0,12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Grid.Column="0" Text="Gemini API Key:" 
                                       VerticalAlignment="Center" Margin="0,0,10,0" FontSize="13"/>
                            <TextBox Grid.Column="1" x:Name="GeminiApiKeyTextBox" 
                                     Background="#2D2D30" Foreground="White" 
                                     BorderBrush="#3C3C3C" Padding="10,6" Margin="0,0,10,0" FontSize="13"/>
                <Button Grid.Column="2" Content="Test" Width="70" 
                    Style="{StaticResource HeaderButtonStyle}" Click="OnTestGeminiClick"/>
                        </Grid>

                        <!-- Gemini Endpoint (expandable/collapsible) -->
                        <Expander Header="Advanced: Gemini Endpoint" 
                                  Margin="0,10,0,0"
                                  Background="Transparent"
                                  Foreground="#CCCCCC"
                                  BorderThickness="0">
                            <Grid Margin="0,12,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0" Text="API Endpoint:" 
                                           VerticalAlignment="Center" Margin="0,0,10,0" FontSize="13"/>
                                <TextBox Grid.Column="1" x:Name="GeminiEndpointTextBox" 
                                         Background="#2D2D30" Foreground="White" 
                                         BorderBrush="#3C3C3C" Padding="10,6" FontSize="12"
                                         Text="https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent"/>
                            </Grid>
                        </Expander>
                    </StackPanel>
                </GroupBox>
                
                <!-- Translation Settings -->
                <GroupBox Header="Translation Settings" Margin="0,0,0,25" 
                          Foreground="White" BorderBrush="#3C3C3C" Padding="5">
                    <StackPanel Margin="20">
                        <CheckBox x:Name="OverwriteExistingCheckBox" Content="Overwrite existing translations" 
                                  Foreground="White" FontSize="13" Margin="0,0,0,12" IsChecked="True"/>
                        
                        <CheckBox x:Name="ValidatePlaceholdersCheckBox" Content="Validate placeholders automatically" 
                                  Foreground="White" FontSize="13" Margin="0,0,0,12" IsChecked="True"/>
                        
                        <CheckBox x:Name="CreateBackupCheckBox" Content="Create backup before saving" 
                                  Foreground="White" FontSize="13" Margin="0,0,0,12" IsChecked="True"/>
                        
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <TextBlock Text="Max concurrent requests:" VerticalAlignment="Center" FontSize="13"
                                       Margin="0,0,12,0"/>
                            <TextBox x:Name="MaxConcurrentTextBox" Text="3" Width="80" 
                                     Background="#2D2D30" Foreground="White" FontSize="13"
                                     BorderBrush="#3C3C3C" Padding="10,6" 
                                     HorizontalContentAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                
                <!-- UI Settings -->
                <GroupBox Header="Interface Settings" Margin="0,0,0,25" 
                          Foreground="White" BorderBrush="#3C3C3C" Padding="5">
                    <StackPanel Margin="20">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                            <TextBlock Text="Language:" VerticalAlignment="Center" FontSize="13"
                                       Margin="0,0,12,0"/>
                            <ComboBox x:Name="LanguageComboBox" Width="180" 
                                      Style="{StaticResource SettingsComboBoxStyle}">
                                <ComboBoxItem Content="English" Tag="en" IsSelected="True"
                                              Background="#2D2D30" Foreground="White"/>
                                <ComboBoxItem Content="Tiếng Việt" Tag="vi"
                                              Background="#2D2D30" Foreground="White"/>
                            </ComboBox>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                            <TextBlock Text="Theme:" VerticalAlignment="Center" FontSize="13"
                                       Margin="0,0,12,0"/>
                            <ComboBox x:Name="ThemeComboBox" Width="180" 
                                              Style="{StaticResource SettingsComboBoxStyle}">
                                <ComboBoxItem Content="Dark" Tag="Dark" IsSelected="True"
                                                      Background="#2D2D30" Foreground="White"/>
                                <ComboBoxItem Content="Light" Tag="Light"
                                                      Background="#2D2D30" Foreground="White"/>
                                <ComboBoxItem Content="Auto" Tag="Auto"
                                                      Background="#2D2D30" Foreground="White"/>
                            </ComboBox>
                        </StackPanel>
                        
                        <CheckBox x:Name="ShowProgressAnimationsCheckBox" Content="Show progress animations" 
                                  Foreground="White" FontSize="13" Margin="0,0,0,12" IsChecked="True"/>
                        
                        <CheckBox x:Name="AutoSaveCheckBox" Content="Auto-save every 5 minutes" 
                                  Foreground="White" FontSize="13" Margin="0,0,0,12" IsChecked="False"/>
                    </StackPanel>
                </GroupBox>
                
                <!-- Advanced Settings -->
                <GroupBox Header="Advanced Settings" Margin="0,0,0,25" 
                          Foreground="White" BorderBrush="#3C3C3C" Padding="5">
                    <StackPanel Margin="20">
                        <TextBlock Text="Translation Quality:" Margin="0,0,0,12" Foreground="#CCCCCC" FontSize="13"/>
                        <ComboBox x:Name="QualityComboBox" Width="250" 
                            Style="{StaticResource SettingsComboBoxStyle}" Margin="0,0,0,15">
                            <ComboBoxItem Content="Fast (Lower Quality)" Tag="Fast"
                                Background="#2D2D30" Foreground="White"/>
                            <ComboBoxItem Content="Balanced" Tag="Balanced" IsSelected="True"
                                Background="#2D2D30" Foreground="White"/>
                            <ComboBoxItem Content="High Quality (Slower)" Tag="High"
                                Background="#2D2D30" Foreground="White"/>
                        </ComboBox>
                        
                        <CheckBox x:Name="EnableLoggingCheckBox" Content="Enable detailed logging" 
                                  Foreground="White" FontSize="13" Margin="0,0,0,12" IsChecked="False"/>
                        
                        <CheckBox x:Name="ShowDebugInfoCheckBox" Content="Show debug information" 
                                  Foreground="White" FontSize="13" Margin="0,0,0,12" IsChecked="False"/>
                        
                        <!-- Translation Memory Limit -->
                        <TextBlock x:Name="MemoryLimitLabel" Text="Translation Memory Limit (entries):" 
                                   Foreground="#CCCCCC" FontSize="13" Margin="0,0,0,8"/>
                        <Grid Margin="0,0,0,12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Slider x:Name="MemoryLimitSlider" Grid.Column="0"
                                    Minimum="20000" Maximum="1500000" 
                                    TickFrequency="10000" IsSnapToTickEnabled="True"
                                    Value="100000" Margin="0,0,12,0"
                                    ValueChanged="OnMemoryLimitChanged"/>
                            <TextBlock Grid.Column="1" x:Name="MemoryLimitValueText" 
                                       Text="100,000" Foreground="White" FontSize="13" 
                                       VerticalAlignment="Center" MinWidth="80" TextAlignment="Right"/>
                        </Grid>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
        
        <!-- Footer -->
        <Border Grid.Row="3" Background="#252526" Padding="25,15" BorderBrush="#3E3E42" BorderThickness="0,1,0,0">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Name="ResetButton" Content="Reset to Defaults" Margin="0,0,12,0" 
                Background="#666666" Foreground="White" 
                BorderThickness="0" Padding="18,10" Cursor="Hand" FontSize="13"
                Style="{StaticResource HeaderButtonStyle}"
                Click="OnResetClick"/>
            <Button x:Name="CancelButton" Content="Cancel" Margin="0,0,12,0" 
                Background="#666666" Foreground="White" 
                BorderThickness="0" Padding="18,10" Cursor="Hand" FontSize="13"
                Style="{StaticResource HeaderButtonStyle}"
                Click="OnCancelClick"/>
            <Button x:Name="SaveButton" Content="Save Settings" 
                Background="#007ACC" Foreground="White" 
                BorderThickness="0" Padding="18,10" Cursor="Hand" FontSize="13" FontWeight="SemiBold"
                Style="{StaticResource HeaderButtonStyle}"
                Click="OnSaveClick"/>
        </StackPanel>
        </Border>
    </Grid>
    </Border>
</Window>
