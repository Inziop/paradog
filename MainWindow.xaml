<Window x:Class="ParadoxTranslator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:ParadoxTranslator.Controls"
        mc:Ignorable="d"
        Title="Paradox Translator" Height="900" Width="1400"
        WindowStartupLocation="CenterScreen"
        MinHeight="600" MinWidth="1000"
        Background="#1E1E1E"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResize">
    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="40" 
                      ResizeBorderThickness="5"
                      GlassFrameThickness="0"
                      CornerRadius="8"/>
    </WindowChrome.WindowChrome>
    
    <Window.Resources>
        <!-- Merge Shared Styles -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/SharedStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        <!-- Window Button Style -->
        <Style x:Key="WindowButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3E3E42"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AICheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.9"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeaderButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.95"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#3A3A3A"/>
                    <Setter Property="Foreground" Value="#E6E6E6"/>
                    <Setter Property="Opacity" Value="0.95" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- HeaderComboBoxStyle removed - using ModernComboBox from SharedStyles.xaml -->
        </ResourceDictionary>
    </Window.Resources>

    <Border Background="#1E1E1E" CornerRadius="8" BorderBrush="#3E3E42" BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
        
            <!-- Custom Title Bar -->
            <Border Grid.Row="0" Background="#2D2D30" CornerRadius="8,8,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- App Title -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="15,0,0,0" VerticalAlignment="Center">
                        <TextBlock Text="🎮" FontSize="16" Margin="0,0,8,0" VerticalAlignment="Center"/>
                        <TextBlock x:Name="ProjectNameTextBlock" Text="Paradox Translator" 
                                   FontSize="14" FontWeight="SemiBold" 
                                   Foreground="White" VerticalAlignment="Center"/>
                    </StackPanel>
                    
                    <!-- Window Controls -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button x:Name="MinimizeButton" Content="─" 
                                Style="{StaticResource WindowButtonStyle}"
                                Click="OnMinimize"
                                ToolTip="Minimize"/>
                        <Button x:Name="MaximizeButton" Content="□" 
                                Style="{StaticResource WindowButtonStyle}"
                                Click="OnMaximize"
                                ToolTip="Maximize"/>
                        <Button x:Name="CloseButton" Content="✕" 
                                Style="{StaticResource CloseButtonStyle}"
                                Click="OnCloseWindow"
                                ToolTip="Close"/>
                    </StackPanel>
                </Grid>
            </Border>
        
            <!-- Header/Toolbar -->
            <Border Grid.Row="1" Background="#2D2D30" Padding="15,10" BorderBrush="#3E3E42" BorderThickness="0,1,0,1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Project Switch Button -->
                    <Button Grid.Column="0" x:Name="SwitchProjectButton" Content="⇄ Switch" 
                            Click="OnSwitchProject"
                            Background="#6C757D" Style="{StaticResource HeaderButtonStyle}"
                            Padding="12,6" Margin="0,0,15,0"
                            ToolTip="Switch to another project"/>

                    <!-- Spacer -->
                    <Grid Grid.Column="1"/>

                    <!-- Controls -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <!-- Language selectors -->
                    <Border Background="#252526" CornerRadius="4" Padding="8,4" Margin="0,0,10,0">
                        <DockPanel>
                            <TextBlock Text="From:" Foreground="#CCCCCC" VerticalAlignment="Center" Margin="0,0,8,0"/>
                            <ComboBox MinWidth="100" 
                                     Background="#FFFFFF" Foreground="#000000"
                                     TextElement.Foreground="#000000"
                                     BorderBrush="#555555" BorderThickness="1"
                                     SelectedValuePath="Tag"
                                     SelectedValue="{Binding SourceLanguage, Mode=TwoWay}">
                                <ComboBox.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="#000000"/>
                                    </Style>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Foreground" Value="#000000"/>
                                        <Setter Property="Background" Value="#FFFFFF"/>
                                    </Style>
                                </ComboBox.Resources>
                                <ComboBoxItem Tag="en">
                                    <TextBlock Text="English" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="fr">
                                    <TextBlock Text="French" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="de">
                                    <TextBlock Text="German" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="es">
                                    <TextBlock Text="Spanish" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="vi">
                                    <TextBlock Text="Vietnamese" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="zh">
                                    <TextBlock Text="Chinese" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="ja">
                                    <TextBlock Text="Japanese" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="ko">
                                    <TextBlock Text="Korean" Foreground="Black"/>
                                </ComboBoxItem>
                            </ComboBox>
                        </DockPanel>
                    </Border>

                    <Border Background="#252526" CornerRadius="4" Padding="8,4" Margin="0,0,10,0">
                        <DockPanel>
                            <TextBlock Text="To:" Foreground="#CCCCCC" VerticalAlignment="Center" Margin="0,0,8,0"/>
                            <ComboBox MinWidth="100" 
                                     Background="#FFFFFF" Foreground="#000000"
                                     TextElement.Foreground="#000000"
                                     BorderBrush="#555555" BorderThickness="1"
                                     SelectedValuePath="Tag"
                                     SelectedValue="{Binding TargetLanguage, Mode=TwoWay}">
                                <ComboBox.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="#000000"/>
                                    </Style>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Foreground" Value="#000000"/>
                                        <Setter Property="Background" Value="#FFFFFF"/>
                                    </Style>
                                </ComboBox.Resources>
                                <ComboBoxItem Tag="vi">
                                    <TextBlock Text="Vietnamese" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="zh">
                                    <TextBlock Text="Chinese" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="ja">
                                    <TextBlock Text="Japanese" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="ko">
                                    <TextBlock Text="Korean" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="en">
                                    <TextBlock Text="English" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="fr">
                                    <TextBlock Text="French" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="de">
                                    <TextBlock Text="German" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="es">
                                    <TextBlock Text="Spanish" Foreground="Black"/>
                                </ComboBoxItem>
                            </ComboBox>
                        </DockPanel>
                    </Border>

                    <!-- AI Controls -->
                    <Border Background="#252526" CornerRadius="4" Padding="8,4" Margin="0,0,10,0">
                        <StackPanel Orientation="Horizontal">
                            <Border Background="{Binding AiStatusBrush}" CornerRadius="4" Padding="6,4" VerticalAlignment="Center">
                                <TextBlock Text="{Binding AiStatusText}" Foreground="White" FontWeight="SemiBold"/>
                            </Border>
                            <CheckBox Content="Enable AI" IsChecked="{Binding AiEnabled, Mode=TwoWay}" 
                                    Style="{StaticResource AICheckBoxStyle}"/>
                        </StackPanel>
                    </Border>

                    <!-- File Actions -->
                    <Button Content="📂 Open File" Command="{Binding OpenYamlFileCommand}"
                            Background="#007ACC" Style="{StaticResource HeaderButtonStyle}"
                            Margin="0,0,10,0" ToolTip="Open a YAML localization file (Ctrl+O)"/>
                    
                    <!-- Quick Filter -->
                    <Border Background="#252526" CornerRadius="4" Padding="8,4" Margin="0,0,10,0">
                        <DockPanel>
                            <TextBlock Text="Filter:" Foreground="#CCCCCC" VerticalAlignment="Center" Margin="0,0,8,0"/>
                            <ComboBox MinWidth="90" 
                                     Background="#FFFFFF" Foreground="#000000"
                                     TextElement.Foreground="#000000"
                                     BorderBrush="#555555" BorderThickness="1"
                                     SelectedValuePath="Tag"
                                     SelectedValue="{Binding FilterMode, Mode=TwoWay}">
                                <ComboBox.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="#000000"/>
                                    </Style>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Foreground" Value="#000000"/>
                                        <Setter Property="Background" Value="#FFFFFF"/>
                                    </Style>
                                </ComboBox.Resources>
                                <ComboBoxItem Tag="All" IsSelected="True">
                                    <TextBlock Text="All" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="Translated">
                                    <TextBlock Text="Translated" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="Untranslated">
                                    <TextBlock Text="Untranslated" Foreground="Black"/>
                                </ComboBoxItem>
                                <ComboBoxItem Tag="HasIssues">
                                    <TextBlock Text="Has Issues" Foreground="Black"/>
                                </ComboBoxItem>
                            </ComboBox>
                        </DockPanel>
                    </Border>

                    <!-- Other Actions -->
                    <Button Content="⚙️ Settings" Command="{Binding OpenSettingsCommand}" 
                            Background="#007ACC" Style="{StaticResource HeaderButtonStyle}"
                            Margin="10,0,0,0"
                            ToolTip="Configure translation settings (Ctrl+,)"/>
                    <Button Content="📊 Statistics" Command="{Binding ShowStatisticsCommand}" 
                            Margin="10,0,0,0" Background="#28A745" Style="{StaticResource HeaderButtonStyle}"
                            ToolTip="View translation statistics (F5)"/>
                    <Button Content="💾 Export" Command="{Binding ExportCommand}" 
                            Margin="10,0,0,0" Background="#8E44AD" Style="{StaticResource HeaderButtonStyle}"
                            ToolTip="Export translations to file (Ctrl+E)"/>
                    <Button Content="❓ Help" Command="{Binding ShowWelcomeCommand}" 
                            Margin="10,0,0,0" Background="#17A2B8" Style="{StaticResource HeaderButtonStyle}"
                            ToolTip="Show help and welcome screen"/>
                    <Button Content="ℹ️ About" Command="{Binding ShowAboutCommand}" 
                            Margin="10,0,0,0" Background="#6C757D" Style="{StaticResource HeaderButtonStyle}"
                            ToolTip="About this application"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Main Content -->
            <Grid Grid.Row="2" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- File List -->
            <Border Grid.Column="0" Background="#252526" CornerRadius="0" Margin="0">
                <DockPanel>
                    <!-- Search Box -->
                    <Border DockPanel.Dock="Top" Background="#2D2D30" Padding="10" BorderThickness="0,0,0,1" BorderBrush="#3E3E42">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Search Icon -->
                            <TextBlock Grid.Column="0" Text="🔍" FontSize="14" 
                                       Foreground="#999999" VerticalAlignment="Center"
                                       Margin="8,0,0,0"/>
                            
                            <!-- Search TextBox -->
                            <TextBox x:Name="SearchBox" Grid.Column="1"
                                     Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                     Background="Transparent" Foreground="White" 
                                     Padding="8,4" BorderThickness="0" 
                                     VerticalAlignment="Center"
                                     TextChanged="OnSearchTextChanged"/>
                            
                            <!-- Placeholder Text -->
                            <TextBlock Grid.Column="1" Text="Search files..." 
                                       Margin="8,0,0,0" Padding="0,4"
                                       Foreground="#666666" IsHitTestVisible="False"
                                       VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=SearchBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            
                            <!-- Clear Button -->
                            <Button x:Name="ClearSearchButton" Grid.Column="2" 
                                    Content="×" FontSize="16"
                                    Foreground="#999999" Background="Transparent"
                                    BorderThickness="0" Padding="8,0"
                                    Cursor="Hand" VerticalAlignment="Center"
                                    Visibility="Collapsed"
                                    Click="OnClearSearchClick">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>

                    <!-- File List -->
                    <ListBox x:Name="FileListBox"
                             ItemsSource="{Binding Files}"
                             SelectedItem="{Binding SelectedFile}"
                             Background="Transparent"
                             BorderThickness="0"
                             Margin="0,10,0,0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <TextBlock Grid.Row="0" 
                                              Text="{Binding FileName}" 
                                              Foreground="White" 
                                              FontWeight="SemiBold"
                                              TextTrimming="CharacterEllipsis"/>
                                    
                                    <TextBlock Grid.Row="1" 
                                              Text="{Binding RelativePath}" 
                                              Foreground="#CCCCCC" 
                                              FontSize="11"
                                              TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="8,6"/>
                                <Setter Property="Margin" Value="0,2"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="4">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#007ACC"/>
                                        <Setter Property="BorderBrush" Value="#1C97EA"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#3E3E42"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </DockPanel>
            </Border>

            <!-- Translation Grid -->
            <Border Grid.Column="1" Background="#252526" CornerRadius="0">
                <DockPanel>
                    <!-- Batch Action Toolbar -->
                    <Border DockPanel.Dock="Top" Background="#2D2D30" Padding="10" BorderThickness="0,0,0,1" BorderBrush="#3E3E42">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Batch Actions:" Foreground="#CCCCCC" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="SemiBold"/>
                            <Button Content="✓ Select All" Command="{Binding SelectAllCommand}"
                                    Background="#28A745" Foreground="White" BorderThickness="0" 
                                    Padding="10,4" Margin="0,0,5,0" Cursor="Hand"
                                    ToolTip="Select all visible entries"/>
                            <Button Content="✗ Deselect All" Command="{Binding DeselectAllCommand}"
                                    Background="#6C757D" Foreground="White" BorderThickness="0" 
                                    Padding="10,4" Margin="0,0,10,0" Cursor="Hand"
                                    ToolTip="Clear all selections"/>
                            <Button Content="🤖 Translate Selected" Command="{Binding BatchTranslateCommand}"
                                    Background="#8E44AD" Foreground="White" BorderThickness="0" 
                                    Padding="10,4" FontWeight="SemiBold" Cursor="Hand"
                                    ToolTip="Batch translate all selected untranslated entries">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding AiEnabled}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Border>
                    
                <DataGrid ItemsSource="{Binding SelectedFile.Entries}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          HeadersVisibility="Column"
                          GridLinesVisibility="Horizontal"
                          Background="Transparent"
                          BorderThickness="0"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          RowHeaderWidth="0">
                    <DataGrid.Resources>
                        <!-- ScrollBar style is in SharedStyles.xaml -->
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <!-- Translated rows: subtle green tint -->
                                <DataTrigger Binding="{Binding IsTranslated}" Value="True">
                                    <Setter Property="Background" Value="#1A2E1A"/>
                                </DataTrigger>
                                <!-- Has issues: warning yellow tint -->
                                <DataTrigger Binding="{Binding HasPlaceholderIssues}" Value="True">
                                    <Setter Property="Background" Value="#3A2A1A"/>
                                </DataTrigger>
                                <!-- Selected state overrides -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#007ACC"/>
                                </Trigger>
                                <!-- Hover state -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#3E3E42"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Header="☑" 
                                              Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                              Width="40"/>
                        <DataGridTextColumn Header="Key" 
                                          Binding="{Binding Entry.Key}"
                                          Width="150"
                                          IsReadOnly="True"/>
                        <DataGridTemplateColumn Header="Source Text" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Entry.SourceText}" 
                                             TextWrapping="Wrap" 
                                             Margin="4"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Translation" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{Binding Entry.TranslatedText, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="Wrap"
                                                AcceptsReturn="True"
                                                Margin="4"/>
                                        <Button Grid.Column="1" 
                                                Content="📋"
                                                ToolTip="Copy source to translation (Ctrl+C)"
                                                Command="{Binding DataContext.CopySourceToTranslationCommand, 
                                                          RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                CommandParameter="{Binding}"
                                                Margin="2,0"
                                                Padding="4,2"
                                                Background="#6C757D"
                                                BorderThickness="0"
                                                Foreground="White">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="0.8"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button Grid.Column="2" 
                                                Content="🤖"
                                                ToolTip="Translate with AI (Ctrl+T)"
                                                Command="{Binding DataContext.TranslateWithAiCommand, 
                                                          RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                CommandParameter="{Binding}"
                                                Margin="2,0,4,0"
                                                Padding="4,2"
                                                Background="#8E44AD"
                                                BorderThickness="0"
                                                Foreground="White">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.AiEnabled, 
                                                                     RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                                                     Value="False">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                            <Setter Property="Opacity" Value="0.5"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Status" 
                                          Binding="{Binding Status}"
                                          Width="150"
                                          IsReadOnly="True"/>
                    </DataGrid.Columns>
                    <!-- Context Menu -->
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy Key" Click="OnCopyKey"/>
                            <MenuItem Header="Copy Source Text" Click="OnCopySource"/>
                            <MenuItem Header="Copy Translation" Click="OnCopyTranslation"/>
                            <Separator/>
                            <MenuItem Header="Clear Translation" Click="OnClearTranslation"/>
                            <MenuItem Header="Copy Source to Translation" 
                                     Command="{Binding PlacementTarget.DataContext.CopySourceToTranslationCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                     CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Translate with AI" 
                                     Command="{Binding PlacementTarget.DataContext.TranslateWithAiCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                     CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
                </DockPanel>
            </Border>
        </Grid>

        <!-- Status Bar -->
        <Border Grid.Row="3" Background="#007ACC" Height="28" CornerRadius="0">
            <DockPanel LastChildFill="False" Margin="15,0">
                <TextBlock Text="{Binding StatusMessage}" 
                           Foreground="White" 
                           FontSize="12"
                           VerticalAlignment="Center"
                           DockPanel.Dock="Left"/>
                <TextBlock Text="{Binding ProgressText}" 
                           Foreground="White" 
                           FontSize="12"
                           VerticalAlignment="Center"
                           DockPanel.Dock="Right"/>
            </DockPanel>
        </Border>
        
        <!-- Toast Container (Top-Right) -->
        <Grid Grid.Row="1" Grid.RowSpan="3" IsHitTestVisible="False">
            <StackPanel x:Name="ToastContainer" 
                       HorizontalAlignment="Right" 
                       VerticalAlignment="Top"
                       Margin="20,20,20,0">
            </StackPanel>
        </Grid>
        </Grid>
    </Border>
</Window>